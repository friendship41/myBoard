<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!-- 
	<bean id="tv" class="stage.spring.polymorphism.SamsungTV" p:price="250000" p:speaker-ref="sony" />
	<bean id="sony" class="stage.spring.polymorphism.SonySpeaker"/>
	<bean id="apple" class="stage.spring.polymorphism.AppleSpeaker"/>
 -->
 
 <!-- 
 	<bean id="collectionBean" class="stage.spring.collection.CollectionBean">
 		<property name="addressList">
 			<list>
 				<value>서울시 종로구 묘동</value>
 				<value>서울시 강서구 방화동</value>
 				<value>수원시 팔달구 우만동</value>
 				<value>수원시 팔달구 우만동</value>
 				<value>수원시 팔달구 우만동</value>
 			</list>
 		</property>
 		<property name="addressMap">
 			<map>
 				<entry>
 					<key><value>홍길동</value></key>
 					<value>율도국</value>
 				</entry>
 				<entry>
 					<key><value>손오공</value></key>
 					<value>화과산</value>
 				</entry>
 				<entry>
 					<key><value>나</value></key>
 					<value>서울</value>
 				</entry>
 			</map>
 		</property>
 		<property name="addressProperties">
 			<props>
 				<prop key="나">서울</prop>
 				<prop key="너">대구</prop>
 				<prop key="우리">부산</prop>
 			</props>
 		</property>
 		<property name="addressSet">
 			<set value-type="java.lang.String">
 				<value>서울시 종로구 묘동</value>
 				<value>서울시 강서구 방화동</value>
 				<value>서울시 팔달구 우만동</value>
 				<value>서울시 팔달구 우만동</value>
 				<value>서울시 팔달구 우만동</value>
 			</set>
 		</property>
 	</bean>
-->

<!-- 
	<context:component-scan base-package="stage.spring.polymorphism"></context:component-scan>

	<bean id="sony" class="stage.spring.polymorphism.SonySpeaker"></bean>
 -->
 
<!-- 
 	<bean id="myLifeBean" class="stage.spring.lifecycle.MyLifeBeanImpl" init-method="init">
 		<property name="greeting"><value>Hello</value></property>
 	</bean>
 	
 	<bean class="stage.spring.lifecycle.CustomBeanPostProcessor"/>
 	
-->

	<!-- 컴포넌트 스캔 -->
	<context:component-scan base-package="stage.spring.web"/>
	
<!-- 
	<bean id="userService" class="stage.spring.web.user.impl.UserServiceImpl">
		<property name="userDAO" ref="userDAO"/>
	</bean>
	<bean id="userDAO" class="stage.spring.web.user.impl.UserDAO"/>
-->

<!-- 
	<bean id="log" class="stage.spring.web.common.Log4jAdvice"/>
-->

	<!-- AOP 관련 -->
<!-- 
	<bean id="before" class="stage.spring.web.common.BeforeAdvice"/>
	<bean id="afterReturning" class="stage.spring.web.common.AfterReturningAdvice"/>
	<bean id="afterThrowing" class="stage.spring.web.common.AfterThrowingAdvice"/>
	<bean id="after" class="stage.spring.web.common.AfterAdvice"/>
	<bean id="around" class="stage.spring.web.common.AroundAdvice"/>
	<aop:config>
		<aop:pointcut expression="execution(* stage.spring.web..*Impl.*(..))" id="allPointCut"/>
		<aop:pointcut expression="execution(* stage.spring.web..*Impl.get*(..))" id="getPointCut"/>
		<aop:aspect ref="afterReturning">
			<aop:after-returning method="afterLog" pointcut-ref="getPointCut" returning="returnObj"/>
		</aop:aspect>
		<aop:aspect ref="afterThrowing">
			<aop:after-throwing method="exceptionLog" pointcut-ref="allPointCut" throwing="e"/>
		</aop:aspect>
		<aop:aspect ref="around">
			<aop:around method="aroundLog" pointcut-ref="allPointCut"/>
		</aop:aspect>
	</aop:config>
-->


	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>




	<!-- DBCP API 설정 방법1 -->
<!--  
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521/XEPDB1"/>
		<property name="username" value="stage41"/>
		<property name="password" value="qwe"/>
	</bean>
-->
	
	<!-- DBCP API 설정 방법2 -->
	<context:property-placeholder location="classpath:config/database.properties"/>
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>


	<!-- 트렌젝션 기능 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* stage.spring.web..*(..))" id="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>	


	<!-- 마이바티스 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sessionFactory"/>
	</bean>

</beans>
